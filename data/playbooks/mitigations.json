[
  {
    "id": "pb_001",
    "issue_type": "high_memory",
    "title": "High Memory Usage Mitigation",
    "symptoms": [
      "memory_usage > 85%",
      "OutOfMemoryError in logs",
      "Increasing memory trend over 30 minutes",
      "Garbage collection frequency increased"
    ],
    "root_causes": [
      "Memory leak in application",
      "Cache size unbounded",
      "Large result sets from database",
      "Thread leak creating objects"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "restart_service",
        "description": "Restart the affected service to clear memory",
        "risk": "low",
        "expected_result": "Immediate memory reduction"
      },
      {
        "priority": 2,
        "action": "scale_horizontally",
        "description": "Add more instances to distribute load",
        "risk": "low",
        "expected_result": "Load distribution reduces memory pressure"
      },
      {
        "priority": 3,
        "action": "clear_cache",
        "description": "Clear application cache if applicable",
        "risk": "medium",
        "expected_result": "Temporary performance impact, memory recovery"
      }
    ],
    "verification": [
      "Check memory_usage < 70% after 5 minutes",
      "Verify no OutOfMemoryError in logs",
      "Confirm garbage collection normalized"
    ],
    "preventive_measures": [
      "Set JVM heap size limits",
      "Implement cache eviction policies",
      "Add memory monitoring alerts at 70% threshold"
    ]
  },
  {
    "id": "pb_002",
    "issue_type": "high_latency",
    "title": "High Latency Response Mitigation",
    "symptoms": [
      "request_latency_ms > 1000",
      "Timeout errors increasing",
      "Queue depth increasing",
      "User complaints about slow response"
    ],
    "root_causes": [
      "Database slow queries",
      "Network congestion",
      "Insufficient compute resources",
      "External service degradation"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "enable_circuit_breaker",
        "description": "Activate circuit breaker for failing dependencies",
        "risk": "medium",
        "expected_result": "Fail fast, prevent cascade"
      },
      {
        "priority": 2,
        "action": "increase_connection_pool",
        "description": "Increase database connection pool size",
        "risk": "low",
        "expected_result": "More concurrent connections available"
      },
      {
        "priority": 3,
        "action": "enable_cache",
        "description": "Enable response caching for frequent queries",
        "risk": "low",
        "expected_result": "Reduced database load"
      }
    ],
    "verification": [
      "Check request_latency_ms < 500",
      "Verify error rate decreased",
      "Confirm queue depth normalizing"
    ]
  },
  {
    "id": "pb_003",
    "issue_type": "connection_pool",
    "title": "Database Connection Pool Exhaustion",
    "symptoms": [
      "Connection pool exhausted errors",
      "active_connections > 900",
      "Database timeout errors",
      "Service unable to connect to database"
    ],
    "root_causes": [
      "Connection leak in application",
      "Sudden traffic spike",
      "Long-running queries holding connections",
      "Database performance degradation"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "kill_long_queries",
        "description": "Terminate queries running > 60 seconds",
        "risk": "medium",
        "expected_result": "Free up held connections"
      },
      {
        "priority": 2,
        "action": "restart_connection_pool",
        "description": "Force connection pool restart",
        "risk": "high",
        "expected_result": "All connections reset"
      },
      {
        "priority": 3,
        "action": "scale_database_read_replicas",
        "description": "Add read replicas to distribute load",
        "risk": "low",
        "expected_result": "Read traffic distributed"
      }
    ],
    "verification": [
      "Check active_connections < 700",
      "No connection pool errors in last 5 minutes",
      "Database response time < 100ms"
    ]
  },
  {
    "id": "pb_004",
    "issue_type": "cascading_failure",
    "title": "Cascading Failure Mitigation",
    "symptoms": [
      "Multiple services reporting errors",
      "Error rate > 10% across services",
      "Dependency chain failures",
      "System-wide degradation"
    ],
    "root_causes": [
      "Core service failure",
      "Database unavailable",
      "Message queue backup",
      "Network partition"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "activate_degraded_mode",
        "description": "Switch to degraded mode with limited features",
        "risk": "low",
        "expected_result": "Core functionality preserved"
      },
      {
        "priority": 2,
        "action": "isolate_failing_service",
        "description": "Remove failing service from load balancer",
        "risk": "medium",
        "expected_result": "Prevent spread of failures"
      },
      {
        "priority": 3,
        "action": "increase_timeout_limits",
        "description": "Temporarily increase timeout thresholds",
        "risk": "low",
        "expected_result": "Reduce timeout-induced failures"
      }
    ],
    "verification": [
      "Error rate < 2% across all services",
      "No new timeout errors",
      "All critical paths operational"
    ]
  },
  {
    "id": "pb_005",
    "issue_type": "high_cpu",
    "title": "High CPU Usage Mitigation",
    "symptoms": [
      "cpu_usage > 85%",
      "System load average high",
      "Response time degradation",
      "Thread pool saturation"
    ],
    "root_causes": [
      "Inefficient algorithm",
      "Infinite loop",
      "Excessive logging",
      "Crypto mining malware"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "scale_horizontally",
        "description": "Add more instances immediately",
        "risk": "low",
        "expected_result": "Load distributed across instances"
      },
      {
        "priority": 2,
        "action": "throttle_requests",
        "description": "Enable rate limiting",
        "risk": "medium",
        "expected_result": "Reduced incoming load"
      },
      {
        "priority": 3,
        "action": "profile_and_optimize",
        "description": "Run CPU profiler and optimize hot paths",
        "risk": "low",
        "expected_result": "Long-term CPU reduction"
      }
    ],
    "verification": [
      "CPU usage < 70%",
      "Response times normalized",
      "No thread pool exhaustion"
    ]
  },
  {
    "id": "pb_006",
    "issue_type": "high_error_rate",
    "title": "High Error Rate Mitigation",
    "symptoms": [
      "error_rate > 10%",
      "Multiple 4xx/5xx responses",
      "User complaints increasing",
      "Service degradation"
    ],
    "root_causes": [
      "Bad deployment",
      "Configuration error",
      "External dependency failure",
      "Database issues"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "rollback_deployment",
        "description": "Revert to previous stable version",
        "risk": "low",
        "expected_result": "Immediate error reduction"
      },
      {
        "priority": 2,
        "action": "enable_circuit_breaker",
        "description": "Prevent cascading failures",
        "risk": "low",
        "expected_result": "Isolated failure impact"
      },
      {
        "priority": 3,
        "action": "increase_retries",
        "description": "Add retry logic with exponential backoff",
        "risk": "medium",
        "expected_result": "Transient errors handled"
      }
    ],
    "verification": [
      "Error rate < 1%",
      "Service health checks passing",
      "No user complaints in last 10 minutes"
    ]
  },
  {
    "id": "pb_007",
    "issue_type": "disk_issue",
    "title": "Disk Space Critical Mitigation",
    "symptoms": [
      "disk_usage > 90%",
      "Write failures in logs",
      "Database unable to write",
      "Log rotation failing"
    ],
    "root_causes": [
      "Log files not rotating",
      "Large temporary files",
      "Database growth unchecked",
      "Backup files accumulating"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "clean_temp_files",
        "description": "Remove temporary and cache files",
        "risk": "low",
        "expected_result": "Immediate disk space recovery"
      },
      {
        "priority": 2,
        "action": "force_log_rotation",
        "description": "Rotate and compress old logs",
        "risk": "low",
        "expected_result": "Free up log directory space"
      },
      {
        "priority": 3,
        "action": "archive_old_data",
        "description": "Move old data to archive storage",
        "risk": "medium",
        "expected_result": "Long-term space management"
      }
    ],
    "verification": [
      "Disk usage < 80%",
      "No write failures in logs",
      "Database writes successful"
    ]
  },
  {
    "id": "pb_008",
    "issue_type": "network_issue",
    "title": "Network Degradation Mitigation",
    "symptoms": [
      "network_in_mbps < 10",
      "network_out_mbps < 10",
      "Connection timeouts",
      "Packet loss detected"
    ],
    "root_causes": [
      "Network congestion",
      "DDoS attack",
      "Routing issues",
      "Hardware failure"
    ],
    "mitigation_steps": [
      {
        "priority": 1,
        "action": "enable_cdn",
        "description": "Activate CDN for static content",
        "risk": "low",
        "expected_result": "Reduced origin traffic"
      },
      {
        "priority": 2,
        "action": "switch_to_backup_network",
        "description": "Route traffic through backup connection",
        "risk": "medium",
        "expected_result": "Alternative network path"
      },
      {
        "priority": 3,
        "action": "enable_compression",
        "description": "Enable gzip compression for responses",
        "risk": "low",
        "expected_result": "Reduced bandwidth usage"
      }
    ],
    "verification": [
      "Network throughput normalized",
      "No connection timeouts",
      "Packet loss < 0.1%"
    ]
  }
]